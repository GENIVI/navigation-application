#! /bin/bash
###########################################################################
# @licence app begin@
# SPDX-License-Identifier: MPL-2.0
#
# \copyright Copyright (C) 2013-2014, PCA Peugeot Citroen
#
# \file run
#
# \brief This file is part of the Build System.
#
# \author # Author: Martin Schaller <martin.schaller@it-schaller.de>
#
# \version 1.0
#
# This Source Code Form is subject to the terms of the
# Mozilla Public License (MPL), v. 2.0.
# If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.
#
# For further information see http://www.genivi.org/.
#
# List of changes:
# 
# <date>, <name>, <description of change>
#
# @licence end@
###########################################################################

function run
{
	local x=$xterm
	local g=$gdb
	title="$1"
	shift
	if [ "$1" = "-n" ]
	then
		shift
		x=0
	fi
	if [ "$1" = "-g" ]
	then
		shift
		g=0
	fi
	if [ "$x" = 1 ]
	then
		if [ "$g" = 1 ]
		then
			set -- gdb -ex run --args "$@"
		fi
		xterm -T "$title" -sb -sl 5000 -e "$@" &
	else
		"$@" &
	fi
	PIDS="$PIDS $!"
}

function terminate
{
	set +e
	trap "" EXIT INT
	kill $PIDS
	if [ -n "$wm" ]
	then
		sleep 2
		cd
		nohup $wm >/dev/null 2>/dev/null &
	fi
}

BIN_DIR=$PWD/../../bin
SRC_DIR=$PWD/..
gdb=0
lm=0
xterm=0
wm=""
app=application.qml
while getopts a:c:glnpx opt
do
	case $opt in
	a)
		app=$OPTARG
		;;
	c)
		plugin_args="$plugin_args -$opt $OPTARG"
		;;
	g)
		plugin_args="$plugin_args -$opt"
		gdb=1
		;;
	l)
		lm=1
		;;
	n)
		plugin_args="$plugin_args -$opt"
		;;
	x)
		plugin_args="$plugin_args -$opt"
		xterm=1
		;;
	\?)
		echo "Usage:"
		echo "$0 [-a application][-c center][-lnx]"
		echo "-a: Set application (default application.qml)"
		echo "-c: Set center (supported values: paris,tokyo,longitude latitude). Default is geneve"
		echo "-g: Run subprocesses within gdb (only with -x)"
		echo "-l: Use layermanager"
		echo "-n: Don't start enhanced positioning service"
		echo "-x: Run subprocesses in own xterm to get separated log messages (doesn't make sense with -l)"
		exit 1
	esac
done

REPLAYER_LOG_FILE=none
export REPLAYER_LOG_FILE

if [ "$lm" = "1" ]
then
	for i in metacity compiz
	do
		if pidof $i
		then
			killall $i
			while pidof $i
			do
				echo "Waiting for termination of $i"
				sleep 1
			done
			wm="$i"
			break
		fi
	done
	set -e
	export LM_USE_SESSION_BUS=enable
	PATH=$PWD/../bin/layer_management/inst/usr/local/bin:$PWD/../bin/libqtlayerman/lmqmlviewer:$PATH
	export LD_LIBRARY_PATH=$PWD/../bin/layer_management/inst/usr/local/lib:$PWD/../bin/libqtlayerman/src
	export LM_PLUGIN_PATH=$PWD/../bin/layer_management/inst/usr/local/lib/layermanager
	LayerManagerService  &
	lm_pid=$!
	sleep 2
fi
export | egrep " LM_PLUGIN_PATH=|LM_USE_SESSION_BUS=| DBUS_SESSION_BUS_ADDRESS=| LD_LIBRARY_PATH=| PATH=| DISPLAY=" >env.sh
trap "terminate" EXIT INT
cd $BIN_DIR/automotive-message-broker
run "Automotive Message Broker" ./ambd/ambd --config $SRC_DIR/genivilogreplayer/logreplayerconfig
cd $BIN_DIR/log-replayer
run "Log Replayer" ./log-replayer $SRC_DIR/positioning_*/log-replayer/logs/geneve-cologny.log
cd $BIN_DIR/poi-service
run "POI service" ./poi-server -f empty.db
cd $SRC_DIR/navigation-service*/src/navigation/script
run "Navit Plugins" -n ./run -b $BIN_DIR $plugin_args
cd $SRC_DIR/hmi/qml
if [ "$lm" = 1 ]
then
	lmqmlviewer $app
else
	qmlviewer $app
fi
